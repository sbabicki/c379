Functions
	int main();
	void *process_input();
	int rand_saucers();
	int fire_shot();
	void stats();
	void setup_saucer();
	void saucer_hit();
	void new_saucer_position();
	void *saucers();
	void *replace_thread();
	int launch_site();
	void find_hit();
	void *shots();
	int welcome();
	
	
	void lock_draw();
	void unlock_draw();
	
	void setup_saucer();
	void stats();
	int launch_site();
	int welcome(); 
	
	
	void saucer_hit();
	void new_saucer_position();
	void *saucers();
	int rand_saucers();
	
	void *replace_thread();
	
	
	void *process_input();
	
	void *shots();
	int fire_shot();
	void find_hit();
	
	int main();
	
	
	
	
	
	
Collision detection
	kill signal

Threads
	//replace etc
	thread storage arrays 
		replace for the saucers
		looping for the shots array
	

Mutexes

Condition Variables


game specifics 
	rand & srand for speed and row
	
	
	describe the overall structure of your code
	describe the threads used by your code and what their jobs are
	describe the critical sections, i.e. the sharing of data structures between your threads (which data are shared, who accesses them, and how they are protected)
	describe the user interface to your game - including your reasons for making particular decisions about it. Note - your TA should be able to read your design documentation and then know how to read your code and play the game.